{"version":3,"sources":["/home/mael/Documents/projects/incidents/dev/test/index.js"],"names":["t","resp","get","true","length","localityId","_id","undefined","Math","random","waitForLocality","post","kind","locationId","happenedAt","console","log","waitForIncidentPost","incidentId"],"mappings":";;AAAA;;AACA;;;;;;;AAOA,kBAAK,+CAAL,EAAsD,MAAMA,CAAN,IAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE7D,MAAIC,OAAO,MAAM,iBAAKC,GAAL,CAAS,kCAAT,CAAjB;AACAF,IAAEG,IAAF,uBAAO,kBAAOF,IAAP,qCAAgB,kBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACAD,IAAEG,IAAF,yBAAO,yDAAKC,MAAL,yBAAe,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyB,uDAAzB,EAJ6D,CAM7D;;AAEA,MAAIC,aAAaJ,KAAK,CAAL,EAAQK,GAAzB;AAEAL,SAAO,MAAM,iBAAKC,GAAL,CAAS,sCAAsCG,UAA/C,CAAb;AACAL,IAAEG,IAAF,yBAAO,mBAAOF,IAAP,sCAAgB,mBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACAD,IAAEG,IAAF,yBAAO,yDAAKG,GAAL,sCAAaC,SAAb,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA+B,iDAA/B;AAEAN,SAAO,MAAM,iBAAKC,GAAL,CAAS,sCAAsCM,KAAKC,MAAL,EAA/C,CAAb;AACAT,IAAEG,IAAF,yBAAO,mBAAOF,IAAP,sCAAgB,mBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACAD,IAAEG,IAAF,yBAAO,yDAAKG,GAAL,sCAAaC,SAAb,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA+B,oDAA/B;AAEAG,kBAAgBL,UAAhB;AACH,CAnBD;;AAsBA,IAAIK,kBAAmBL,UAAD,IAAgB;AAClC,oBAAK,iBAAL,EAAwB,MAAML,CAAN,IAAW;AAAA;;AAC/B,UAAMC,OAAO,MAAM,iBAAKU,IAAL,CAAU,iCAAV,EAA6C;AAAEC,YAAM,SAAR;AAAmBC,kBAAYR,UAA/B;AAA2CS,kBAAY;AAAvD,KAA7C,CAAnB;AAEAC,YAAQC,GAAR,CAAYf,IAAZ,EAH+B,CAK/B;;AACAD,MAAEG,IAAF,yBAAO,0CAAS,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAsB,uBAAtB,EAN+B,CAQ/B;AACA;AACH,GAVD;AAWH,CAZD;;AAeA,IAAIc,sBAAuBC,UAAD,IAAgB;AACtC,oBAAK,iBAAL,EAAwB,MAAMlB,CAAN,IAAW;AAAA;;AAE/B,QAAIC,OAAO,MAAM,iBAAKC,GAAL,CAAS,iCAAT,CAAjB;AACAF,MAAEG,IAAF,yBAAO,mBAAOF,IAAP,sCAAgB,mBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkC,+BAAlC;AACH,GAJD;AAKH,CAND","file":"/home/mael/Documents/projects/incidents/dev/test/index.js","sourcesContent":["import test from \"ava\"\nimport http from \"ava-http\"\n\n\n\n\n\n\ntest(\"/GET localities/ and localities/${localityId}\", async t => {\n\n    var resp = await http.get(\"http://localhost:8000/localities\");\n    t.true(typeof resp === typeof [], \"The response is not an object\");\n    t.true(resp.length >= 1, \"The result must have at least 1 register to test with\");\n\n    //////////////////////////////////\n\n    var localityId = resp[0]._id;\n\n    resp = await http.get(\"http://localhost:8000/localities/\" + localityId);\n    t.true(typeof resp === typeof {}, \"The response is not an object\");\n    t.true(resp._id !== undefined, \"The response should return an existing locality\");\n\n    resp = await http.get(\"http://localhost:8000/localities/\" + Math.random());\n    t.true(typeof resp === typeof {}, \"The response is not an object\");\n    t.true(resp._id === undefined, \"The response should return a non existing locality\");\n\n    waitForLocality(localityId);\n});\n\n\nvar waitForLocality = (localityId) => {\n    test(\"/POST incidents\", async t => {\n        const resp = await http.post(\"http://localhost:8000/incidents\", { kind: \"robbery\", locationId: localityId, happenedAt: \"2018-02-07\" });\n\n        console.log(resp)\n\n        // t.true(resp === false, \"Response must be false since no parameter was sent\");\n        t.true(resp === true, \"Response must be true\");        \n\n        // t.true(resp === 200);\n        // t.true(resp === false, \"The response should've been \\\"false\\\" because no parameters were sent\");\n    })\n}\n\n\nvar waitForIncidentPost = (incidentId) => {\n    test(\"/GET incidents/\", async t => {\n\n        var resp = await http.get(\"http://localhost:8000/incidents\");\n        t.true(typeof resp === typeof [], \"The response is not an object\");\n    });\n}\n\n"]}