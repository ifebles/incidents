{"version":3,"sources":["/home/mael/Documents/projects/incidents/dev/test/index.js"],"names":["t","resp","get","true","length","_id","undefined","Math","random","params","kind","locationId","happenedAt","post","console","log"],"mappings":";;AAAA;;AACA;;;;;;;AAOA,kBAAK,+CAAL,EAAsD,MAAMA,CAAN,IAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE7D,MAAIC,OAAO,MAAM,iBAAKC,GAAL,CAAS,kCAAT,CAAjB;AACAF,IAAEG,IAAF,uBAAO,kBAAOF,IAAP,qCAAgB,kBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACAD,IAAEG,IAAF,yBAAO,yDAAKC,MAAL,yBAAe,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyB,uDAAzB,EAJ6D,CAM7D;;AAEAH,SAAO,MAAM,iBAAKC,GAAL,CAAS,sCAAsCD,KAAK,CAAL,EAAQI,GAAvD,CAAb;AACAL,IAAEG,IAAF,yBAAO,mBAAOF,IAAP,sCAAgB,mBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACAD,IAAEG,IAAF,yBAAO,yDAAKE,GAAL,sCAAaC,SAAb,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA+B,iDAA/B;AAEAL,SAAO,MAAM,iBAAKC,GAAL,CAAS,sCAAsCK,KAAKC,MAAL,EAA/C,CAAb;AACAR,IAAEG,IAAF,yBAAO,mBAAOF,IAAP,sCAAgB,mBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACAD,IAAEG,IAAF,yBAAO,yDAAKE,GAAL,sCAAaC,SAAb,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA+B,oDAA/B;AACH,CAfD;AAkBA,kBAAK,mDAAL,EAA0D,MAAMN,CAAN,IAAW;AAAA;AAAA;AAAA;;AAEjE,MAAIC,OAAO,MAAM,iBAAKC,GAAL,CAAS,kCAAT,CAAjB;AACAF,IAAEG,IAAF,yBAAO,mBAAOF,IAAP,sCAAgB,mBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACAD,IAAEG,IAAF,yBAAO,yDAAKC,MAAL,yBAAe,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyB,uDAAzB,EAJiE,CAMjE;;AAEA,QAAMK,SAAS;AAAEC,UAAM,SAAR;AAAmBC,gBAAYV,KAAK,CAAL,EAAQI,GAAvC;AAA4CO,gBAAY;AAAxD,GAAf;AACAX,SAAO,MAAM,iBAAKY,IAAL,CAAU,iCAAV,EAA6CJ,MAA7C,CAAb;AACAK,UAAQC,GAAR,CAAYd,IAAZ;AACAD,IAAEG,IAAF,yBAAO,0CAAS,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAsB,uBAAtB,EAXiE,CAajE;AAEA;AACA;AACA;AACA;AACH,CAnBD;AAsBA,kBAAK,iBAAL,EAAwB,MAAMH,CAAN,IAAW;AAAA;;AAE/B,MAAIC,OAAO,MAAM,iBAAKC,GAAL,CAAS,iCAAT,CAAjB;AACAF,IAAEG,IAAF,2BAAO,oBAAOF,IAAP,uCAAgB,oBAAO,EAAP,+BAAhB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkC,+BAAlC;AACH,CAJD","file":"/home/mael/Documents/projects/incidents/dev/test/index.js","sourcesContent":["import test from \"ava\"\nimport http from \"ava-http\"\n\n\n\n\n\n\ntest(\"/GET localities/ and localities/${localityId}\", async t => {\n\n    var resp = await http.get(\"http://localhost:8000/localities\");\n    t.true(typeof resp === typeof [], \"The response is not an object\");\n    t.true(resp.length >= 1, \"The result must have at least 1 register to test with\");\n\n    //////////////////////////////////\n\n    resp = await http.get(\"http://localhost:8000/localities/\" + resp[0]._id);\n    t.true(typeof resp === typeof {}, \"The response is not an object\");\n    t.true(resp._id !== undefined, \"The response should return an existing locality\");\n\n    resp = await http.get(\"http://localhost:8000/localities/\" + Math.random());\n    t.true(typeof resp === typeof {}, \"The response is not an object\");\n    t.true(resp._id === undefined, \"The response should return a non existing locality\");\n});\n\n\ntest(\"/POST incidents/ incidents/${incidentId}/archive/\", async t => {\n\n    var resp = await http.get(\"http://localhost:8000/localities\");\n    t.true(typeof resp === typeof [], \"The response is not an object\");\n    t.true(resp.length >= 1, \"The result must have at least 1 register to test with\");\n\n    //////////////////////////////////\n\n    const params = { kind: \"robbery\", locationId: resp[0]._id, happenedAt: \"2018-02-07\" };\n    resp = await http.post(\"http://localhost:8000/incidents\", params);\n    console.log(resp)\n    t.true(resp === true, \"Response must be true\");\n\n    //////////////////////////////////\n\n    // const second\n    // resp = await http.post(`http://localhost:8000/incidents/${resp}/archive/`, { kind: \"robbery\", locationId: resp[0]._id, happenedAt: \"2018-02-07\" });\n    // console.log(resp)\n    // t.true(resp === true, \"Response must be true\");\n})\n\n\ntest(\"/GET incidents/\", async t => {\n\n    var resp = await http.get(\"http://localhost:8000/incidents\");\n    t.true(typeof resp === typeof [], \"The response is not an object\");\n});\n\n"]}